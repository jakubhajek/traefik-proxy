apiVersion: v1
data:
  default.conf: |
    server {
    listen 80 default_server;
    server_name localhost ;
    location /upload {
        root   /usr/share/nginx/html;
        client_body_temp_path  /usr/share/nginx/html/upload/client_tmp;
        dav_methods  PUT DELETE MKCOL COPY MOVE;
        client_max_body_size 1500m;
        create_full_put_path   on;
        dav_access  group:rw  all:r;
      }
    }
kind: ConfigMap
metadata:
  name: upload

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: "nginx-test-with-pvc"
  name: nginx-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-with-pvc
  name: nginx-with-pvc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-with-pvc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-with-pvc
    spec:
      containers:
        - image: nginx:1.19.8
          name: nginx
          ports:
            - containerPort: 80
              name: "http-server"

          volumeMounts:
            - mountPath: "/usr/share/nginx/html"
              name: vol1

            - name: upload
              mountPath: "/etc/nginx/conf.d/default.conf"
              subPath: "default.conf"

      initContainers:
        - name: create-dir
          image: busybox:1.31.1
          command: ["sh", "-c", "mkdir -pv /usr/share/nginx/html/upload/client_tmp && chown -Rv 101.101 /usr/share/nginx/html/*"]
          volumeMounts:
            - mountPath: "/usr/share/nginx/html"
              name: vol1
      volumes:
        - name: vol1
          persistentVolumeClaim:
            claimName: nginx-pvc
        - name: upload
          configMap:
            name: upload

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-with-pvc
spec:
  type: ClusterIP
  selector:
    app: nginx-with-pvc
  ports:
    - port: 80
---
